name: Test
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.1
        ports:
        - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
      vault:
        image: vault:1.9.1
        ports:
          - 8200:8200
        env:
          VAULT_DEV_ROOT_TOKEN_ID: testroot
    steps:

      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

#      - name: Login to Docker Hub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Test
        run: | 
          go mod download
          go generate ./...
          go vet ./...
        env:
          PG_HOST: 127.0.0.1
          PG_USER: postgres
          PG_PASSWORD: postgres
          PG_DBNAME: postgres
          VAULT_ADDRESS: http://127.0.0.1:8200
          VAULT_TOKEN: testroot

      - name: Publish Code Coverage
        uses: paambaati/codeclimate-action@v3.0.0
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
        with:
          coverageCommand: |
            go test -v -race -coverprofile c.out -failfast ./...
#            cat c.out.tmp | grep -v "_gen.go" | grep -v ".pb.go" | grep -v "/rangedbtest/" | grep -v "/cryptotest/" > c.out
            go tool cover -func c.out
          coverageLocations: ${{github.workspace}}/c.out:gocov
          prefix: ${{ github.event.repository.name }}
