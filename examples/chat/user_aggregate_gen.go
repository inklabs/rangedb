// Code generated by go generate; DO NOT EDIT.
// This file was generated at
// 2021-01-30 11:08:57.46043 -0800 PST m=+0.001705489
package chat

import (
	"github.com/inklabs/rangedb"
	"github.com/inklabs/rangedb/pkg/cqrs"
)

func (a *user) Load(recordIterator rangedb.RecordIterator) {
	for recordIterator.Next() {
		if recordIterator.Err() == nil {
			if event, ok := recordIterator.Record().Data.(rangedb.Event); ok {
				a.apply(event)
			}
		}
	}
}

func (a *user) Handle(command cqrs.Command) []rangedb.Event {
	switch c := command.(type) {
	case OnBoardUser:
		a.OnBoardUser(c)

	case WarnUser:
		a.WarnUser(c)

	}

	defer a.resetPendingEvents()
	return a.pendingEvents
}

func (a *user) resetPendingEvents() {
	a.pendingEvents = nil
}

func (a *user) CommandTypes() []string {
	return []string{
		OnBoardUser{}.CommandType(),
		WarnUser{}.CommandType(),
	}
}

func (a *user) raise(events ...rangedb.Event) {
	a.pendingEvents = append(a.pendingEvents, events...)
}
